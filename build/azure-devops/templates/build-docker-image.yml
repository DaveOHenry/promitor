parameters:
  imageName: ''
  buildArgs: ''
  tags: '--tag promitor-agent-scraper-ci'
  os: ''

steps:
- bash: |
    echo "Variable 'imageName' found with value '$IMAGE_NAME'"
    if [ -z "$IMAGE_NAME" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"imageName\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'tags' found with value '$TAGS'"
    if [ -z "$TAGS" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"tags\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'buildArgs' found with value '$BUILD_ARGS'"
    if [ -z "$BUILD_ARGS" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"buildArgs\""
      echo "##vso[task.complete result=Failed;]"
    fi
    echo "Variable 'os' found with value '$OS'"
    if [ -z "$OS" ]; then
      echo "##vso[task.logissue type=error;]Missing template parameter \"os\""
      echo "##vso[task.complete result=Failed;]"
    fi
  env:
    IMAGE_NAME: ${{ parameters.imageName }}
    BUILD_ARGS: ${{ parameters.buildArgs }}
    TAGS: ${{ parameters.tags }}
    OS: ${{ parameters.os }}
  displayName: Check for required parameters in YAML template
- task: Docker@1
  displayName: 'Build image (${{ parameters.os }})'
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'Docker Hub'
    dockerFile: ./src/Promitor.Scraper.Host/Dockerfile
    arguments: '${{ parameters.tags }} ${{ parameters.buildArgs }} --no-cache'
    useDefaultContext: false
    buildContext: ./src/
    imageName: '${{ parameters.imageName }}'
    addDefaultLabels: false